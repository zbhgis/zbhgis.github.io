<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>zbhgis</title><link>https://zbhgis.github.io</link><description>Focus on GIS, RS, Ecology</description><copyright>zbhgis</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/116264372?s=400&amp;u=0c4073b50ae732450cd91f380769ba6710d6ce53&amp;v=4</url><title>avatar</title><link>https://zbhgis.github.io</link></image><lastBuildDate>Sat, 28 Jun 2025 03:30:58 +0000</lastBuildDate><managingEditor>zbhgis</managingEditor><ttl>60</ttl><webMaster>zbhgis</webMaster><item><title>Landsat 8/9 C2L2级别数据下载、使用、处理的个人经验以及注意事项汇总（查找用）</title><link>https://zbhgis.github.io/post/40.html</link><description># Landsat 8/9 C2L2级别数据下载、使用、处理的个人经验以及注意事项汇总（查找用）

@[toc]
## 前言

本文主要对Landsat 8/9 C2L2级别各项产品及其使用的文章的汇总，方便查找。</description><guid isPermaLink="true">https://zbhgis.github.io/post/40.html</guid><pubDate>Fri, 27 Jun 2025 03:44:31 +0000</pubDate></item><item><title>SNAP软件的下载、安装、更新、卸载与遇到的一些问题</title><link>https://zbhgis.github.io/post/39.html</link><description># SNAP软件的下载、安装、更新、卸载与遇到的一些问题

## 前言

SNAP（Sentinel Application Platform）是欧洲空间局（ESA）开发的一款软件，主要用于处理和分析遥感数据，特别是来自其Sentinel卫星系列的数据。</description><guid isPermaLink="true">https://zbhgis.github.io/post/39.html</guid><pubDate>Fri, 27 Jun 2025 02:30:12 +0000</pubDate></item><item><title>ENVI 5.3对USGS网站下载的Landsat 8/9 C2L2地表反射率数据进行预处理（波段合成、裁剪、镶嵌、定标、去云）</title><link>https://zbhgis.github.io/post/38.html</link><description># ENVI 5.3对USGS网站下载的Landsat 8/9 C2L2地表反射率数据进行预处理（波段合成、裁剪、镶嵌、定标、去云）

@[toc]
## 前言（必读）

不同的下载方式以及不同级别的数据产品在ENVI的不同版本中有不同的处理方式，以本文为例，演示在USGS网站下载Landsat 8/9 C2L2级别的地表反射率（SR）产品在ENVI 5.3版本中的预处理流程

！！！建议所有数据在进行以下操作之前进行备份，避免操作失误等问题需要去网站上重新下载数据！！！

在进行预处理之前，最好对这个级别的数据有一定的了解。</description><guid isPermaLink="true">https://zbhgis.github.io/post/38.html</guid><pubDate>Fri, 27 Jun 2025 02:21:44 +0000</pubDate></item><item><title>ENVI6.0试用版（180天）详细安装教程，附安装包链接和一些常见问题</title><link>https://zbhgis.github.io/post/37.html</link><description># ENVI6.0试用版（180天）详细安装教程，附安装包链接和一些常见问题

[TOC]



## 前言

如标题所示，这个只是试用版，180天的期限，仅适用于个人学习。</description><guid isPermaLink="true">https://zbhgis.github.io/post/37.html</guid><pubDate>Fri, 27 Jun 2025 02:15:29 +0000</pubDate></item><item><title>ENVI 5.3/6.0打开Landsat 8/9 C2L2级别数据（带有Metadata）</title><link>https://zbhgis.github.io/post/36.html</link><description># ENVI 5.3/6.0打开Landsat 8/9 C2L2级别数据（带有Metadata）

@[toc]
## 前言

这篇文章主要介绍在ENVI不同版本如何通过Metadata打开Landsat 8/9 C2L2级别的数据。</description><guid isPermaLink="true">https://zbhgis.github.io/post/36.html</guid><pubDate>Fri, 27 Jun 2025 01:24:58 +0000</pubDate></item><item><title>USGS网站下载Landsat 5/7/8/9数据最新详细教程（注册、筛选、单波段、批量下载等），附常见问题</title><link>https://zbhgis.github.io/post/35.html</link><description># USGS网站下载Landsat 5/7/8/9数据最新详细教程（注册、筛选、单波段、批量下载等），附常见问题

@[toc]
## 前言

本文主要介绍了在USGS网站上下载Landsat系列影像的过程，发现了很多坑，特此记录一下。</description><guid isPermaLink="true">https://zbhgis.github.io/post/35.html</guid><pubDate>Fri, 27 Jun 2025 01:17:29 +0000</pubDate></item><item><title>ENVI通过DEM数据计算坡度、坡向等地形特征</title><link>https://zbhgis.github.io/post/34.html</link><description># ENVI通过DEM数据计算坡度、坡向等地形特征

[TOC]

## 前言

这篇文章主要介绍ENVI通过DEM数据计算坡度、坡向等地形特征。</description><guid isPermaLink="true">https://zbhgis.github.io/post/34.html</guid><pubDate>Fri, 27 Jun 2025 01:06:41 +0000</pubDate></item><item><title>ENVI通过DEM数据提取山峰、洼地等地形特征</title><link>https://zbhgis.github.io/post/33.html</link><description># ENVI通过DEM数据提取山峰、洼地等地形特征

[TOC]

## 前言

之前的文章介绍了在ENVI中怎么提取坡度、坡向等地形因子

[ENVI通过DEM数据计算坡度、坡向等地形特征-CSDN博客](https://blog.csdn.net/zbh13859825167/article/details/139023262)

```
https://blog.csdn.net/zbh13859825167/article/details/139023262
```

这篇文章主要介绍ENVI通过DEM数据提取山峰、洼地等地形特征。</description><guid isPermaLink="true">https://zbhgis.github.io/post/33.html</guid><pubDate>Fri, 27 Jun 2025 01:05:22 +0000</pubDate></item><item><title>Flask调试模式（debug mode）开启不了，显示Debug mode: off</title><link>https://zbhgis.github.io/post/32.html</link><description># Flask调试模式（debug mode）开启不了，显示Debug mode: off

## 环境

Python 3.9 

Flask 2.2.3

Pycharm 2022

## 问题

在run中加上了`debug=True`之后（如下）

```python
if __name__ == '__main__':
    app.run(debug=True)
```

但在实际运行的时候调试模式（debug mode）仍然没有生效，在控制台显示以下信息

```
 * Debug mode: off
```

![image-20240519161419066](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506270902013.png)

## 解决

在项目配置处的三角标，点击打开【编辑配置】

![image-20240519161739671](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506270902719.png)

找到FLASK_DEBUG，点击勾选，之后点击【确定】即可

![image-20240519161816279](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506270902480.png)

重启项目调试模式即可生效，在控制台显示如下信息

![image-20240519162033698](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506270902628.png)。</description><guid isPermaLink="true">https://zbhgis.github.io/post/32.html</guid><pubDate>Fri, 27 Jun 2025 01:02:52 +0000</pubDate></item><item><title>Mysql命令行客户端常用命令</title><link>https://zbhgis.github.io/post/31.html</link><description># Mysql命令行客户端常用命令

## 注意点

下面展示的 `database_name`、`table_name`、`column1`、`column2`、`value1`、`value2` 和 `datatype`在自己用的时候需要替换为实际的值

在敲命令的时候要注意，一定要在末尾加上分号

## 操作

安装好Mysql之后，搜索找到以下应用

![image-20240519223119791](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506270901949.png)

打开之后即可进入以下界面，并输入好设定的密码，之后即可开始操作

![image-20240519223230509](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506270901502.png)

显示所有的数据库：

```
SHOW DATABASES;
```

创建一个新的数据库，名为 `database_name`：

```
CREATE DATABASE database_name;
```

删除名为 `database_name` 的数据库：

```
DROP DATABASE database_name;
```

选择当前会话要操作的数据库：

```
USE database_name;
```

列出当前选择的数据库中的所有表：

```
SHOW TABLES;
```

显示 `table_name` 表的结构信息：

```
DESCRIBE table_name;
```

向 `table_name` 表中插入一行数据，指定列名和对应的值：

```
INSERT INTO table_name (column1, column2, ...) VALUES (value1, value2, ...);
```

从 `table_name` 表中查询数据，根据条件筛选：

```
SELECT * FROM table_name WHERE condition;
```

更新 `table_name` 表中满足条件的数据：

```
UPDATE table_name SET column1 = value1, column2 = value2 WHERE condition;
```

从 `table_name` 表中删除满足条件的数据：

```
DELETE FROM table_name WHERE condition;
```

在数据库中创建一张名为 `table_name` 的新表，定义列名和数据类型：

```
CREATE TABLE table_name (column1 datatype, column2 datatype, ...);
```

删除名为 `table_name` 的表：

```
DROP TABLE table_name;
```

显示当前连接到 MySQL 服务器的用户：

```
SELECT USER();
```

退出 MySQL 命令行客户端：

```
EXIT;
```

退出 MySQL 命令行客户端：

```
QUIT;
```

。</description><guid isPermaLink="true">https://zbhgis.github.io/post/31.html</guid><pubDate>Fri, 27 Jun 2025 01:01:57 +0000</pubDate></item><item><title>Conda常用命令</title><link>https://zbhgis.github.io/post/30.html</link><description># Conda常用命令

1. **创建新环境：**

   ```
   conda create --name myenv
   ```

   创建一个名为`myenv`的新环境。</description><guid isPermaLink="true">https://zbhgis.github.io/post/30.html</guid><pubDate>Fri, 27 Jun 2025 01:00:18 +0000</pubDate></item><item><title>Landsat 8/9 C2L2级别数据质量评估产品使用注意点</title><link>https://zbhgis.github.io/post/29.html</link><description># Landsat 8/9 C2L2级别数据质量评估产品使用注意点

[TOC]

## 汇总

整理了一份汇总文章，方便查阅
[Landsat 8/9 C2L2级别数据下载、使用、处理的个人经验以及注意事项汇总（查找用）](https://zbhgis.blog.csdn.net/article/details/139023038)

```
https://zbhgis.blog.csdn.net/article/details/139023038
```

## 前言

这篇主要介绍Landsat 8/9 C2L2级别的质量评估产品（QA）。</description><guid isPermaLink="true">https://zbhgis.github.io/post/29.html</guid><pubDate>Fri, 27 Jun 2025 00:59:19 +0000</pubDate></item><item><title>Landsat 8/9 C2L2级别数据地表温度产品使用注意点</title><link>https://zbhgis.github.io/post/28.html</link><description># Landsat 8/9 C2L2级别数据地表温度产品使用注意点

[TOC]

## 汇总

整理了一份汇总文章，方便查阅
[Landsat 8/9 C2L2级别数据下载、使用、处理的个人经验以及注意事项汇总（查找用）](https://zbhgis.blog.csdn.net/article/details/139023038)

```
https://zbhgis.blog.csdn.net/article/details/139023038
```

## 前言

这篇主要介绍Landsat 8/9 C2L2级别的地表温度产品（ST）。</description><guid isPermaLink="true">https://zbhgis.github.io/post/28.html</guid><pubDate>Fri, 27 Jun 2025 00:57:25 +0000</pubDate></item><item><title>Landsat 8/9 C2L2级别数据表面反射率产品使用注意点</title><link>https://zbhgis.github.io/post/27.html</link><description># Landsat 8/9 C2L2级别数据表面反射率产品使用注意点

[TOC]

## 汇总

整理了一份汇总文章，方便查阅
[Landsat 8/9 C2L2级别数据下载、使用、处理的个人经验以及注意事项汇总（查找用）](https://zbhgis.blog.csdn.net/article/details/139023038)

```
https://zbhgis.blog.csdn.net/article/details/139023038
```

## 前言

这篇主要介绍Landsat 8/9 C2L2级别的地表反射率产品（SR）。</description><guid isPermaLink="true">https://zbhgis.github.io/post/27.html</guid><pubDate>Fri, 27 Jun 2025 00:55:57 +0000</pubDate></item><item><title>ENVI拓展工具资源去哪里找？</title><link>https://zbhgis.github.io/post/26.html</link><description># ENVI拓展工具资源去哪里找？

[TOC]



## 前言

ENVI 拓展工具是指 ENVI 软件的扩展功能或插件。</description><guid isPermaLink="true">https://zbhgis.github.io/post/26.html</guid><pubDate>Fri, 27 Jun 2025 00:53:41 +0000</pubDate></item><item><title>Conda安装opencv后显示找不到指定的模块</title><link>https://zbhgis.github.io/post/25.html</link><description># Conda安装opencv后显示找不到指定的模块

[TOC]



## 问题

直接通过conda install opencv安装的opencv，通过Import cv2之后，显示DLL load failed while importing cv2: 找不到指定的模块。</description><guid isPermaLink="true">https://zbhgis.github.io/post/25.html</guid><pubDate>Fri, 27 Jun 2025 00:48:13 +0000</pubDate></item><item><title>Conda安装rasterio报错</title><link>https://zbhgis.github.io/post/24.html</link><description># Conda安装rasterio报错

[TOC]



## 问题

在conda环境中安装rasterio包之后，本来可以正常运行的，但是之后又重新安装了一个gdal，导致原来的引用rasterio的包的程序不可正常运行了

```
conda install rasterio
conda install gdal
```

报错DLL load failed while importing _base，应该两个包冲突了

```
ImportError: DLL load failed while importing _base: 找不到指定的程序。</description><guid isPermaLink="true">https://zbhgis.github.io/post/24.html</guid><pubDate>Thu, 26 Jun 2025 16:17:59 +0000</pubDate></item><item><title>Conda中Richdem包遇到问题</title><link>https://zbhgis.github.io/post/23.html</link><description># Conda中Richdem包遇到问题

[TOC]



## 问题一

### 报错

RichDEM 是一套数字高程模型 （DEM） 水文分析工具，这次打算用richdem进行地形分析，尝试在conda里面安装richdem包的时候，直接使用conda install richdem命令安装包，显示找不到该包

报错PackagesNotFoundError

### 解决

目前国内的资料较少，去github官网上看了官方文档，按照下面的命令即可解决

```
conda install richdem -c conda-forge
```

## 问题二

### 报错

在使用Richdem包的时候，太心急了没看文档，看着某个教程的示例直接使用了rasterio包读取后进行dem分析，然后报错如下

```
Exception: A richdem.rdarray or numpy.ndarray is required!
```

![image-20240506232248160](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506270850380.png)

### 解决

在分析之前，通过内部的函数读取为rdarray类型，然后再进行分析即可

```
dem = rd.rdarray(dem_data, no_data=-9999)
slope_data = rd.TerrainAttribute(dem, attrib='slope_riserun')
```

## 参考

[R-Barnes/Richdem：高性能地形和水文分析 (github.com)](https://github.com/r-barnes/richdem)

```
https://github.com/r-barnes/richdem
```

[Loading Data — RichDEM 0.0.03 documentation](https://richdem.readthedocs.io/en/latest/loading_data.html)

```
https://richdem.readthedocs.io/en/latest/loading_data.html
```

。</description><guid isPermaLink="true">https://zbhgis.github.io/post/23.html</guid><pubDate>Thu, 26 Jun 2025 16:17:29 +0000</pubDate></item><item><title>Arcpy批量克里金插值报错</title><link>https://zbhgis.github.io/post/22.html</link><description># Arcpy批量克里金插值报错

[TOC]



## 问题

在进行实验的时候，Arcpy中批量进行克里金插值报错，主要就是在运行这个工具的时候，一直报错，改了很多参数也不行

```
ERROR 010079: 无法估算半变异函数。</description><guid isPermaLink="true">https://zbhgis.github.io/post/22.html</guid><pubDate>Thu, 26 Jun 2025 16:16:20 +0000</pubDate></item><item><title>Conda环境安装的pyproj包报错</title><link>https://zbhgis.github.io/post/21.html</link><description># Conda环境安装的pyproj包报错

[TOC]



## 问题

在conda创建的Python3.9虚拟环境中安装pyproj包3.6在运行时出现以下报错

```
UserWarning: pyproj unable to set database path. _pyproj_global_context_initialize()
```

## 解决

先激活并进入创建的环境

```
conda activate sa_test
```

先尝试卸载后重装

```
conda remove --force pyproj
```

```
conda install pyproj
```

如果不行的话，就直接通过pip重新安装

```
conda remove --force pyproj
```

```
pip install pyproj
```

重装之后就不会报错了

![image-20240503173223902](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506270014947.png)



## 参考

[python - On fresh Conda installation of PyProj: pyproj unable to set database path. _pyproj_global_context_initialize() - Stack Overflow](https://stackoverflow.com/questions/69630630/on-fresh-conda-installation-of-pyproj-pyproj-unable-to-set-database-path-pypr)

```
https://stackoverflow.com/questions/69630630/on-fresh-conda-installation-of-pyproj-pyproj-unable-to-set-database-path-pypr
```

。</description><guid isPermaLink="true">https://zbhgis.github.io/post/21.html</guid><pubDate>Thu, 26 Jun 2025 16:15:26 +0000</pubDate></item><item><title>pyqt5报错解决</title><link>https://zbhgis.github.io/post/20.html</link><description># pyqt5报错解决

[TOC]



## 环境

Python 3.9  Pyqt5 5.15

## 错误一

```
File 'try.ui', line 1

  &lt;?xml version='1.0' encoding='UTF-8'?&gt;

  ^

syntaxError: invalid syntax
```

报这个错的，

把PyUIC的Arguments参数改为： -m PyQt5.uic.pyuic \$FileName\$ -o \$FileNameWithoutExtension\$.py  

参考： https://www.bilibili.com/read/cv17738858/?jump_opus=1 

## 错误二

```
Error while finding module specification for 'PyQt5.uic.pyuic' (ModuleNotFoundError: No module named 'PyQt5')
```

File|Settings|Tools|External Tools|PyUIC的【Program】选择pyuic5.exe,并将【Arguments】替换成

```
$FileName$ -o $FileNameWithoutExtension$.py
```

参考：[Pycharm-Error while finding module specification for ‘PyQt5.uic.pyuic‘ (ModuleNotFoundError: No modu_error while finding module specification for 'pyqt-CSDN博客](https://blog.csdn.net/zkw_1998/article/details/121806681)。</description><guid isPermaLink="true">https://zbhgis.github.io/post/20.html</guid><pubDate>Thu, 26 Jun 2025 15:56:11 +0000</pubDate></item><item><title>ENVI不同版本个人使用对比</title><link>https://zbhgis.github.io/post/19.html</link><description># ENVI不同版本个人使用对比

[TOC]



## 前言

目前来看，流传较广的可供大家免费获取的ENVI版本主要是5.3学习版 5.6学习版 6.0学习版这三个版本，不同的版本有不同特色，在此做一个简单对比

## 对比

### 5.3学习版

相对来说使用较为广泛，其中内部提供的功能以及对应的IDL几乎都可以正常使用，操作我们相对熟悉并且网络教程也很多，有不懂或者遇到什么bug在网络上基本都能找到对应的解决方案，能够满足遥感数据处理的基本需求

但是缺点就是这个产品功能较少，并且很多后续推出的新模板以及插件都不能使用，比如DeepLearning模块、ENVI Modeler模块

### 5.6学习版

截止发文时间，前段时间网络流传的较广就是5.6学习版，这个版本相对来说是已经配备了更多的新功能，并且整体的旧功能变化较少，算是一个承上启下的版本

但是比如有的人为了ENVI Modeler功能特地去下载ENVI 5.6学习版，在ENVI Modeler进行建模之后，点击【Run】发现是不可以运行的（至少我目前的情况是这样，并且暂时没有解决方案），因此ENVI 5.6的不确定性较高，有些功能无法正常使用

![image-20240428215358487](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262348639.png)

### 6.0试用版

官方博客[ENVI 6.0 自助试用许可开放申请 - ENVI-IDL技术殿堂 - 博客园 (cnblogs.com)](https://www.cnblogs.com/enviidl/p/16275745.html)提供的6.0版本，激活后每个月月底停止试用，根据需要得重新使用工具激活，激活天数共计180天，在试用期间也可以使用最新版本的模块功能，以及一些较为高级的影像处理分析功能，整体处理的速度也相对高一点

但这个版本的功能更新相对较大，有些功能需要自己根据官方文档重新学习，比如FLAASH大气校正功能界面焕然一新，跟原来的相差较大，并且设置参数更加复杂，直到前几天官方博客才出了一篇比较通俗易懂的博文[ENVI5.7-6.0FLAASH大气校正工具详解 - ENVI-IDL技术殿堂 - 博客园 (cnblogs.com)](https://www.cnblogs.com/enviidl/p/18159374)进行讲解

![image-20240428215212005](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262348838.png)

## 总结

根据上面的对比

5.3学习版适合自己进行基本的图像处理操作，并且当功能和别的版本有所出入的时候，5.3学习版能够快速在网上找到对应的解决方案；

6.0试用版适合体验官方的一些新版本功能，并且官方提供的很多插件以及第三方编写的插件，都是可以在6.0试用版中使用的；

因此个人建议自己电脑上同时装5.3学习版+6.0试用版，两者混合使用。</description><guid isPermaLink="true">https://zbhgis.github.io/post/19.html</guid><pubDate>Thu, 26 Jun 2025 15:49:19 +0000</pubDate></item><item><title>Vrml运行环境安装</title><link>https://zbhgis.github.io/post/18.html</link><description># Vrml运行环境安装

## 环境

Win10+Edge浏览器

## VrmlPad安装

![image-20240428210719864](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262347619.png)

（1）双击“vpad30.msi”进行安装，按照提示修改路径之后即可安装成功

（2）将“VrmlPad.exe”复制到安装好的Vrml的目录下，进行替换

（3）打开安装好的VrmlPad，在【帮助】下的【VrmlPad注册】输入准备好的用户名和注册码

## 插件安装

![image-20240428210828804](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262347244.png)

（1）点击“contona3d-viewer-64bit.msi”，按照提示默认即可；

（2）如果上面的浏览器插件不行的话，那就选择“BS_Contact_VRML-X3D_7105.exe”安装，修改路径之后，进行安装即可。</description><guid isPermaLink="true">https://zbhgis.github.io/post/18.html</guid><pubDate>Thu, 26 Jun 2025 15:48:20 +0000</pubDate></item><item><title>地学研究相关工具推荐0427</title><link>https://zbhgis.github.io/post/17.html</link><description># 地学研究相关工具推荐0427

[TOC]

## 前言

以下这些工具是之前在进行一些研究过程中使用过的工具，在之后的研究中可能会用到，这次的工具相对来说更加通用，主要是对各个工具进行一个简介，让大家了解什么事情可以有什么工具实现，提高效率，具体的安装和详细使用还得去找相关教程。</description><guid isPermaLink="true">https://zbhgis.github.io/post/17.html</guid><pubDate>Thu, 26 Jun 2025 15:45:53 +0000</pubDate></item><item><title>地学研究相关工具推荐0426</title><link>https://zbhgis.github.io/post/16.html</link><description># 地学研究相关工具推荐0426

[TOC]



## 前言

以下这些工具是之前在进行一些研究过程中使用过的工具，在之后的研究中可能会用到，推荐给大家，主要是对各个工具进行一个简介，让大家了解什么事情可以有什么工具实现，具体的安装和详细使用还得去找相关教程。</description><guid isPermaLink="true">https://zbhgis.github.io/post/16.html</guid><pubDate>Thu, 26 Jun 2025 15:45:00 +0000</pubDate></item><item><title>Arcpy入门学习笔记（三）：数据属性的获取</title><link>https://zbhgis.github.io/post/15.html</link><description># Arcpy入门学习笔记（三）：数据属性的获取

[TOC]

官方说明：

**Describe** 函数返回的 Describe 对象包含多个属性，如数据类型、字段、索引以及许多其他属性。</description><guid isPermaLink="true">https://zbhgis.github.io/post/15.html</guid><pubDate>Thu, 26 Jun 2025 15:42:02 +0000</pubDate></item><item><title>Python多元非线性回归及绘图</title><link>https://zbhgis.github.io/post/14.html</link><description># Python多元非线性回归及绘图

[TOC]

在数字地形模型这门课做的一个小实验，代码实现的是以影像因子和地形要素为自变量，采样后的高程计算出的指标为因变量进行回归，本质上是通过curve_fit进行多元非线性回归，但是当时的要素偏多，需要写代码依次使用不同的自变量和因变量回归

环境：Python 3.9

## 部分数据截图

![image-20240425231728608](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262358404.png)



## 代码逻辑

### 导入所需库和模块

```python
# coding=gbk
# -*- coding = utf-8 -*-

import numpy as np
import pandas as pd
from scipy.optimize import curve_fit
import matplotlib.pyplot as plt
```

- `numpy`：用于数值计算和数组操作。</description><guid isPermaLink="true">https://zbhgis.github.io/post/14.html</guid><pubDate>Thu, 26 Jun 2025 15:39:49 +0000</pubDate></item><item><title>Python实现线性拟合及绘图</title><link>https://zbhgis.github.io/post/13.html</link><description># Python实现线性拟合及绘图

[TOC]

当时的数字地形实验，使用`matplotlib`库绘制了一张图表表示不同地形类别在不同分辨率下的RMSE值，并分别拟合了一条趋势线。</description><guid isPermaLink="true">https://zbhgis.github.io/post/13.html</guid><pubDate>Thu, 26 Jun 2025 15:38:29 +0000</pubDate></item><item><title>Landsat 8/9 C2L2使用注意点（简略版）</title><link>https://zbhgis.github.io/post/12.html</link><description># Landsat 8/9 C2L2使用注意点（简略版）

## 详细版（更新中）

[Landsat 8/9 C2L2级别数据表面反射率产品使用注意点-CSDN博客](https://zbhgis.blog.csdn.net/article/details/139023038)

```
https://zbhgis.blog.csdn.net/article/details/139023038
```



## 像元值转化

表面反射率产品时和表面温度时，即对应的SR和ST波段的遥感数据时，需要进行像元值的转换，其转换公式与Collection1不一样（Collection1已经弃用了，但在地理空间数据云应该还可以下载），在使用时最好先进行转换

| 科学产品              | 缩放因子   | 偏移量 | 填充值 | 数据类型       |   有效范围   |
| --------------------- | ---------- | ------ | ------ | -------------- | :----------: |
| Collection2地表反射率 | 0.0000275  | -0.2   | 0      | 无符号16位整数 | 7273 - 43636 |
| Collection2地表温度   | 0.00341802 | 149    | 0      | 无符号16位整数 | 293 - 65535  |

即在影像像元值中剔除无效像元值之后，使用Digital Number (DN) * scale_factor + offset计算，即缩放因子*像元值+偏移量

表面反射率：Landsat Collection 2 表面反射率的比例因子为 0.0000275，每个像素的额外偏移为 -0.2。</description><guid isPermaLink="true">https://zbhgis.github.io/post/12.html</guid><pubDate>Thu, 26 Jun 2025 15:36:53 +0000</pubDate></item><item><title>MATLAB 2016计算NDVI</title><link>https://zbhgis.github.io/post/11.html</link><description># MATLAB 2016计算NDVI

之前大二的一段MATLAB代码，突然找到，记录一下当时初学MATLAB的程序，用于读取TIFF计算归一化植被指数（NDVI）并将其保存为TIFF文件。</description><guid isPermaLink="true">https://zbhgis.github.io/post/11.html</guid><pubDate>Thu, 26 Jun 2025 15:35:38 +0000</pubDate></item><item><title>Arcpy入门学习笔记（二）：脚本工具</title><link>https://zbhgis.github.io/post/10.html</link><description># Arcpy入门学习笔记（二）：脚本工具

主要介绍Arcpy脚本工具制作

[TOC]

## Arcpy语法速查

1、ArcGIS工具界面的【工具帮助】

![image-20240419235458653](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262328579.png)

![image-20240419235513830](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262328624.png)

2、地理处理的【结果】会话窗口，右键工具提供的“【复制为Python代码片段】

![image-20240419235859687](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262328279.png)

![image-20240419235944587](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262328384.png)

3、ArcGIS模型【导出至Python脚本文件】

![image-20240420000844887](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262328463.png)



## Arcpy脚本常用代码

会经常使用到的代码或代码块

### 包的导入

```python
# 导入sys模块，设置Python解释器的默认编码为UTF-8
import sys
reload(sys)
sys.setdefaultencoding('utf8')

# 导入ArcPy模块
import arcpy

# 导入NumPy库
import numpy as np

# 导入Python标准库中的os模块，用于操作文件路径
import os

# 导入datetime类，用于处理日期和时间
from datetime import datetime

# 从ArcPy空间分析模块导入所有函数和类
from arcpy.sa import *

# 导入xlwt模块，用于创建和操作Excel文件（xls格式）
import xlwt
```

### 获取工具箱参数

```python
# 获取参数
layer = arcpy.GetParameter(0)

# 获取参数并读取为Unicode
out_path = arcpy.GetParameterAsText(1)

# 获取参数并转为整数
num = int(arcpy.GetParameterAsText(2)) 

# 获取参数并转为字符串
out_path = str(arcpy.GetParameterAsText(3)) 

# 在参数获取方法相同时，可批量获取
args = tuple(arcpy.GetParameterAsText(i) for i in range(arcpy.GetArgumentCount()))
Test(*args)
```

### 环境设置

```python
#!/usr/bin/env python
# coding=utf-8

# 确认分析模块是否可用
arcpy.CheckOutExtension('spatial')

# 设置工作空间
arcpy.env.workspace = out_path

# 设置并行处理因子为0，因为有的学习版用不了这个功能
arcpy.env.parallelProcessingFactor = '0'

# 设置输出可覆盖文件
arcpy.env.overwriteOutput = 'True'
```

### 工具箱输出

```python
# 在工具箱输出栏中打印信息
arcpy.AddMessage('ok')
```

## 脚本工具制作

本部分较为繁琐，可粗略看看

### 准备好py文件

比如下面这个，先在Pycharm中进行测试，可以根据指定数量生成圆的个数，每个圆的半径依次增加50m

```python
#!/usr/bin/env python
# coding=utf-8
# @Time : 2024-04-21 11:41

import sys
reload(sys)
sys.setdefaultencoding('utf8')
import arcpy
import os
import math

def create_shapefiles(num, out_path):
    # 设置坐标系为WGS84_UTM_50N
    spatial_reference = arcpy.SpatialReference(32650)  # WGS84_UTM_50N的WKID为32650

    # 根据num循环创建矢量文件
    for i in range(1, num + 1):
        # 创建要素类名称和路径
        circle_name = 'Circle_{}m'.format(i * 50)
        circle_path = os.path.join(out_path, circle_name + '.shp')

        # 创建圆
        arcpy.management.CreateFeatureclass(os.path.dirname(circle_path), circle_name, 'POLYGON', spatial_reference=spatial_reference)
        circle_cursor = arcpy.da.InsertCursor(circle_path, ['SHAPE@'])
        circle = arcpy.Point()
        circle_geometry = arcpy.Array()
        for angle in range(0, 361, 10):
            circle.X = 50 * i * math.cos(math.radians(angle))  # 半径为50*i
            circle.Y = 50 * i * math.sin(math.radians(angle))
            circle_geometry.add(circle)
        circle_geometry.add(circle_geometry.getObject(0))  # 添加起始点以闭合圆
        circle_cursor.insertRow([arcpy.Polygon(circle_geometry)])
        del circle_cursor

if __name__ == '__main__':
    num = 2
    out_path = r'G:\MyTestProject\arcpy2_test\data'

    arcpy.CheckOutExtension('spatial')
    arcpy.env.parallelProcessingFactor = '0'
    arcpy.env.overwriteOutput = 'True'
    arcpy.env.workspace = out_path

    create_shapefiles(num, out_path)

    arcpy.AddMessage(num)
    arcpy.AddMessage(out_path)
```

在Pycharm中运行结果打开如下：

![image-20240421130358309](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262328633.png)

测试没问题之后，将最后一段改掉，从面板获取参数，并将代码中的中文注释都删掉或者改成英文注释，不然会有一些离谱的bug，修改后准备的导入脚本的代码如下：

```python
#!/usr/bin/env python
# coding=utf-8
# @Time : 2024-04-21 11:41

import sys
reload(sys)
sys.setdefaultencoding('utf8')
import arcpy
import os
import math

def create_shapefiles(num, out_path):
    spatial_reference = arcpy.SpatialReference(32650)  # WGS84_UTM_50N的WKID为32650

    for i in range(1, num + 1):
        circle_name = 'Circle_{}m'.format(i * 50)
        circle_path = os.path.join(out_path, circle_name + '.shp')

        arcpy.management.CreateFeatureclass(os.path.dirname(circle_path), circle_name, 'POLYGON', spatial_reference=spatial_reference)
        circle_cursor = arcpy.da.InsertCursor(circle_path, ['SHAPE@'])
        circle = arcpy.Point()
        circle_geometry = arcpy.Array()
        for angle in range(0, 361, 10):
            circle.X = 50 * i * math.cos(math.radians(angle))
            circle.Y = 50 * i * math.sin(math.radians(angle))
            circle_geometry.add(circle)
        circle_geometry.add(circle_geometry.getObject(0))
        circle_cursor.insertRow([arcpy.Polygon(circle_geometry)])
        del circle_cursor

if __name__ == '__main__':
    # num = 2
    # out_path = r'G:\MyTestProject\arcpy2_test\data'
    num = int(arcpy.GetParameterAsText(0))
    out_path = str(arcpy.GetParameterAsText(1))

    arcpy.CheckOutExtension('spatial')
    arcpy.env.parallelProcessingFactor = '0'
    arcpy.env.overwriteOutput = 'True'
    arcpy.env.workspace = out_path

    create_shapefiles(num, out_path)

    arcpy.AddMessage(num)
    arcpy.AddMessage(out_path)
```



### 创建工具

创建好一个工具箱后，在其中创建工具集，并在工具集中添加脚本

![image-20240421130946332](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262328627.png)



修改名称和标签，存储为相对路径（对应的地图文档属性最好也提前设置为相对路径，在【文件】【地图文档属性】【路径名】处进行勾选）

![image-20240421131053202](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262328631.png)

导入脚本文件所在位置

![image-20240421131411366](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262328222.png)

设置参数，一个为“圆的数量”，对应数据类型为长整型；一个为输出文件夹，对应数据类型为文件夹

![image-20240421131900538](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262328706.png)

右键打开工具

![image-20240421132218453](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262328281.png)

初步使用可行

![image-20240422001014508](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262328952.png)

### 脚本工具各功能详解

脚本右键功能

![image-20240421133114511](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262329285.png)

【属性】中的【常规】

![image-20240421133327100](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262329403.png)

【属性】中的【源】

![image-20240421133508006](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262329400.png)

【属性】中的【参数】

![image-20240421134022597](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262329001.png)

【属性】中的【验证】

![image-20240421134315206](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262329159.png)

### 修改默认编辑和调试

在ArcGIS菜单栏中【地理处理选项】中，将【编辑器】和【调试程序】换做pycharm所在位置，之后即可在脚本右键【编辑】快速在pycharm中打开对应文件（这个根据个人需要设置）

```
D:\py\Pycharm\bin\pycharm64.exe
```

![image-20240421115026617](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262329660.png)



## 总结

脚本工具先自己有个数就行，而且在Pycharm中可以正常运行的工具转为脚本工具可能会有一些奇奇怪怪的错误，最好学一些Arcpy基础之后再用，边学边用就懂了；

其次就是在脚本工具中，尽量不要使用中文，包括注释
&lt;!-- ##{'timestamp':1713736800}## --&gt;。</description><guid isPermaLink="true">https://zbhgis.github.io/post/10.html</guid><pubDate>Thu, 26 Jun 2025 02:54:31 +0000</pubDate></item><item><title>Arcpy入门学习笔记（一）：前期准备</title><link>https://zbhgis.github.io/post/9.html</link><description># Arcpy入门学习笔记（一）：前期准备

使用Arcpy需要先安装ArcGIS或Pro，此处省略

[TOC]

## 环境配置

pycharm安装+ArcGIS 10.6提供的python2.7解释器

在【Settings】中的【Project】下的【Python Interpreter】选择ArcGIS自带的Python2.7

![image-20240420222738713](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262324220.png)

## Pycharm调试功能

断点：在代码行号之后的空白点击一下即可，再次点击取消

![image-20240420224302787](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262324554.png)

调试：debug按钮或Shift+F9

![image-20240420224418276](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262324891.png)

F8：单步，遇到断点后停止运行

F7：进入函数

Alt+shift+F7：进入自己编写的代码

shift+F8：跳出函数

F9：到下一个断点或退出调试

Alt+F9：移动到光标

```Python
# coding=utf-8
# @Time : 2024-04-19 23:30

# 调试用
def print_str(num):
    for _ in range(num):
        print('你好')

if __name__ == '__main__':
    a = 2
    print_str(a)
    b = a
    print(b)
    b = 1
    print_str(b)
```

## Python2基础

### 数据类型

**整型**：整数的表示与运算

```python
# coding=utf-8
# @Time : 2024-04-20 23:42

# 整数运算
num1 = 100
num2 = 200
print '两数之和为：', num1 + num2
print '两数之差为：', num1 - num2
print '两数之积为：', num1 * num2
print '两数之商为：', num1 / num2  # 在Python 2中，整数除法结果为整数（向下取整）
print '两数之商（浮点数）为：', float(num1) / num2
```

**字符串**：文本的表示与操作

```python
# coding=utf-8
# @Time : 2024-04-20 23:42

# 字符串定义与拼接
greeting = '你好！'
name = '小明'
message = greeting + '，' + name + '！'
print message

# 字符串切片与索引
sentence = u'浩瀚地学'
print '首字符：', sentence[0]
print '倒数第二个字符：', sentence[-2]
print '子串：', sentence[2:4]

# 字符串格式化
age = 999
info = '今年{}岁。</description><guid isPermaLink="true">https://zbhgis.github.io/post/9.html</guid><pubDate>Thu, 26 Jun 2025 02:52:47 +0000</pubDate></item><item><title>GEE批量下载Sentinel2数据</title><link>https://zbhgis.github.io/post/7.html</link><description># GEE批量下载Sentinel2数据

Google Earth Engine[https://earthengine.google.com/](https://earthengine.google.com/)网站批量下载数据，需要有谷歌账号和科学上网

## 界面功能

![image-20230712015903828](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262240185.png)



## 导入研究区边界

1.学会导入roi的矢量文件，在【Assets】下选择【New】，导入shp文件

![image-20230712012523506](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262240166.png)

![image-20230712012700256](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262240953.png)

2.在弹出的界面可以选择自己的文件进行上传，除了在gee上的新建的数据集文件名需要修改之外，其他保持默认即可，最后点击【Upload】上传

![image-20230712013340325](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262240411.png)

3.创建好之后就可以去copy别人的代码进行批量下载了，有两个数据可以需要自己手动导入，网上的教程有时没讲这部分，通过【Import】导入roi文件和数据集。</description><guid isPermaLink="true">https://zbhgis.github.io/post/7.html</guid><pubDate>Thu, 26 Jun 2025 02:38:40 +0000</pubDate></item><item><title>福建省标准地图矢量下载、使用和对比</title><link>https://zbhgis.github.io/post/6.html</link><description># 福建省标准地图矢量下载、使用和对比

## 前言

福建省标准地图前几天发布了，其中包含了GDB的矢量地理要素和ArcGIS mxd制图模板



## 下载

1.打开以下网站，[福建省标准地图服务系统 (fjmap.net)](http://bzdt.fjmap.net/index.html)

![image-20231013105013626](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262250746.png)

2.选择上方菜单中的【标准地图】,进入以下界面，再通过上面的搜索栏，输入“GDB”，点击【搜索】进行搜索，出现以下界面

![image-20231013105255434](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262251754.png)

3.在该模块中，可以通过点击【说明】查看数据的说明和格式标准，点击【下载】之后即可下载rar压缩包

![image-20231013105343173](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262251828.png)

![image-20231013105511511](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262251002.png)

## 使用

1.压缩包解压之后其中有以下两个资源，使用ArcGIS打开文档后，需要通过【属性】设置各地理要素源

![image-20231013105805620](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262251986.png)

![image-20231013110004483](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262251459.png)

2.有些数据源在GDB中并没有直接显示，如“高程”，在设置完所有数据源之后即可自动匹配

![image-20231013110244775](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262251157.png)

![image-20231013110219506](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262251538.png)

3.将设置好的模板通过【导出地图】的功能，导出500dpi分辨率的地图如下

![福建省地图示意图版10.0](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262251008.jpeg)

4.其中的地理矢量数据坐标系信息如下，如果需要使用WGS84投影的需要进行通过ArcGIS的【投影】功能转换坐标信息：

![image-20231013112052161](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262251875.png)

![image-20231013112112591](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262258621.png)

## 对比

找到了之前搜集的网络上的China admin division shp行政边界数据，进行对比，发现在主要是在海岸线有所差距，其次可能是由于分辨率的问题，China admin division shp的细节更多（这里就不放图片了）



## 总结

最后放上以上涉及数据的原始相关链接，有能力的可以前往数据原地址下载，使用数据时记得附上相关引用链接和论文

1.福建省地图示意图版(GDB)16开1_300万2023年_闽S[2023]254号：http://bzdt.fjmap.net/index.html

2.China admin division shp：https://github.com/GaryBikini/ChinaAdminDivisonSHP

&lt;!-- ##{'timestamp':1697148000}## --&gt;。</description><guid isPermaLink="true">https://zbhgis.github.io/post/6.html</guid><pubDate>Thu, 26 Jun 2025 02:34:08 +0000</pubDate></item><item><title>哥白尼网站下载Sentinel-1/2/3/5P遥感数据（筛选、单波段/批量下载），附常见问题</title><link>https://zbhgis.github.io/post/5.html</link><description># 哥白尼网站下载Sentinel-1/2/3/5P遥感数据（筛选、单波段/批量下载），附常见问题

## 前言

之前就看到有人推送这个ESA下载Sentinel数据的新网站[https://dataspace.copernicus.eu/browser/](https://dataspace.copernicus.eu/browser/)，就自己探索了一下，有一些意料之外的功能

## 准备工作

1、刚开始进行点击的是这个界面，目测功能很多，但是先登录才能使用，**点击【Login】按钮进入登录界面**，如果没有账号的话，需要注册一个，在进入这个界面之后如果没有账号，那么就可以**点击【Register】按钮进行注册**，注册的流程与USGS类似，最好使用谷歌邮箱或者163邮箱

![image-20231010205321035](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262254956.png)

![image-20231010210136221](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262254003.png)

2.登录之后，点击上面的**【Search】按钮**来到搜索面板，按照下面的图片设置各种条件即可，其中【**Filters】和【Filter by months】可以根据自己的需要进行额外设置**，设置好条件之后可以准备设置区域了

![image-20231010212431533](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262254982.png)

3.在图层上添加研究边界时，可以上传文件，也可以自行绘制边界，根据需要也可以选择下面的绘制线和地标，点击绘制多边形的按钮之后，直接在地图上通过点击的方法即可完成绘制，完成绘制后就可以点击**左侧的面板最下方的【Search】按钮**，搜索

![image-20231010213213795](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262254293.png)

![image-20231010213519429](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262254870.png)

4.搜索结果如下，**左上角的【Go to Search】按钮**可以返回搜索参数设置，重新调整条件；当鼠标在左侧影像上悬停时，右侧对应的方框也会变绿

![image-20231010213737934](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262255238.png)

## 单幅影像直接下载

5.以下面这幅影像为例，在面板上已经显示了他的数据级别，大小，监测时间等主要信息，![image-20231010214437888](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262311540.png)【Product info】是查看具体的信息，![image-20231010214524305](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262311969.png)【Zoom to product】是在右侧图层上定位，![image-20231010214555074](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262311541.png)【Add to workspace】是添加到工作空间，![image-20231010214800076](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262311561.png)【Download product】是直接下载按钮

![image-20231010214238582](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262255075.png)

【Product info】（进一步显示**图像的具体信息**)

![image-20231010214946260](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262255146.png)

【Zoom to product】（将所选图像**定位到地图中心**）

![image-20231010215012155](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262255241.png)

【Add to workspace】（**加入到workspace，可以用于后续批量下载，云端处理等**）

![image-20231010215040600](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262255066.png)

【Download product】（**直接下载数据，下载速度随缘**，我下载的时候是前10%速度很慢，后面的速度可以跑满，下载700MB大概要花15分钟）

![image-20231010215057891](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262255873.png)

## 单波段下载

这个功能需要点击![image-20231010214437888](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262311794.png)**【Product info】**按钮，找到**【Download single files】**，就可以根据需要**直接下载波段文件**

![image-20231010223748786](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262255198.png)

![image-20231010224124453](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262255817.png)



## 在线波段组合显示

1.![image-20231010214858191](https://gitee.com/zbhgis/pic/raw/master/blog/image-20231010214858191.png)按钮可以将现有的图像加载到图层上，以上面那副影像为例，可以**默认将图像的真彩色添加至显示**，也可以根据需要切换至不同的波段组合

![image-20231010224909214](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262255892.png)

2.这些提供的组合不满意也可以在末尾选择**【Custom】**，点击之后可以自行选择波段和指数，也可以通过**【Custom script】**自行修改完成更多的显示

![image-20231010225531107](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262255581.png)

![image-20231010225547658](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262255315.png)

![image-20231010225613598](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262255880.png)



3.在可视化的最初面板中，每个波段组合还附带有如下功能

![image-20231010230101008](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262256464.png)

添加之后依次存放在各个面板中。</description><guid isPermaLink="true">https://zbhgis.github.io/post/5.html</guid><pubDate>Wed, 25 Jun 2025 15:31:16 +0000</pubDate></item><item><title>ENVI使用深度学习存在问题及解决</title><link>https://zbhgis.github.io/post/4.html</link><description># ENVI使用深度学习存在问题及解决

## 前言

前段时间试着用了ENVI的Deep Learning 1.2模块，感觉作为一个本地化的深度学习手段，其使用起来总体体验较为OK，就是比较依赖电脑配置

配置： Dell G15 i5 3050显卡 显存4GB CUDA计算能力达到要求

模块：实验使用的是像素分类模型，进行单个类别的分类

## 1.刚开始的配置检查报错

暂时不确定是否需要额外安装TensorFlow环境（不过我是已经装过了）

如果装完之后还是检测还是显示有问题（比如framework not found)，就不用管，直接跑模型，没有影响



## 2.TensorBoard可视化面板空白

在进行深度学习之后，会跳转到这个地址[http://localhost:6006/#scalars](http://localhost:6006/#scalars)，但是白屏了，不影响深度学习的使用，但是对应性能指标无法可视化，暂时未解决



## 3.输出的h5文件中，找不到精度

直接打开h5文件，在envi目录下的mertrics文件夹中，其中best和Last对应的模型的各个性能指标是一样的，但是他们会分别对应loss最低的和最后输出的，我是看recall来判断模型的识别能力



## 4.在绘制样本roi时，有的看不见

在envi563中，目前绘制样本如果超出了影像范围的时候，不会显示出来，推荐删除掉超出范围的那几个roi



## 5.Last model不设置输出路径

如果不设置的话他会在电脑的temp文件夹产生缓存，暂时不确定在软件关闭后自动删除，推荐设置好路径，输出之后可以快速找到并自己删除



## 6.训练模型的性能指标很好，但是把栅格图像拿去分类的效果很差；或者指标一般，分类效果好

测试过跟输入分类栅格文件格式没有关系，.tif和.dat的分类效果是一样的

大概率是样本划分的问题，导致结果不行；或者是分类影像问题，最好影像没有黑边；也有可能是最开始的模型能力就不行，可以在准备训练模型时，就多添加几个特征波段后再合成，再拿去训练



## 7.部分报错解决

1）一般的报错

首先检查必要的参数有没有设置错，比如输入的影像错误，输入的初始模型错误，参数没有填

其次检查是否存在同名文件，因为不能直接覆盖

再检查文件名和格式是否有问题，比如输出文件的格式为.dat还是默认还是.h5

最后检查电脑配置，可能最起码得有个性能在3050左右的显卡才带得动



2）runtime error：a patches perbatchsize is of 5 to large...

电脑配置不够，看看有没有升级到最新显卡，以及检查输入的训练和验证栅格是不是范围太大（刚开始可以试着输入小一点的栅格比如1500*1500）左右

产生这个报错，推荐不要去调整perbatchsize，因为调整之后虽然可能可以跑了没了这个报错，但是他的输出结果的各个性能指标会有问题，比如accuracy会一样，recall都是0



3）TensorFlow graphic framework is not found...

patch size 设置得太大了，调小一点



## 8.一些官方已经弄好的模快速调用

比如随机参数训练模型，推荐在左上角生成插件，其中在脚本中的” DISPLAY_NAME=‘xxxxxxxxx’ ”意思是拓展插件的名字，可以自己改，设置好之后点击菜单中的【Create Extension】即可生成

![image-20230719140931883](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262238604.png)

![image-20230719141031685](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262238292.png)

之后在ENVI的工具文件夹【Extension】中可以找到，双击可以直接调用

&lt;!-- ##{'timestamp':1696888800}## --&gt;。</description><guid isPermaLink="true">https://zbhgis.github.io/post/4.html</guid><pubDate>Wed, 25 Jun 2025 15:17:45 +0000</pubDate></item><item><title>在USGS上批量下载Landsat系列影像</title><link>https://zbhgis.github.io/post/3.html</link><description># 在USGS上批量下载Landsat系列影像

## 前言

试了一下USGS提供的批量下载的功能，整体使用体验OK。</description><guid isPermaLink="true">https://zbhgis.github.io/post/3.html</guid><pubDate>Wed, 25 Jun 2025 15:10:35 +0000</pubDate></item><item><title>SNAP软件对Sentinel-2数据进行重采样存在问题</title><link>https://zbhgis.github.io/post/8.html</link><description># SNAP软件对Sentinel-2数据进行重采样存在问题

**1.问题：重采样出现了Message：dataType out of range!的提示**

解决：以记事本格式打开并编辑以下文件

```
C:\Users\用户名\.snap\etc\s2tbx.properties
```

在最后添加以下信息并保存

```
user.openjp2.jna=true
```

重启SNAP后软件即可执行重采样

![image-20231221194253165](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262248789.png)



**2.问题：处理完数据之后C盘和D盘爆满**

解决：C盘中是由于以下文件位置会有缓存，处理完后可以直接删除

```
C:\Users\用户名\.snap\var\cache\s2tbx\l2a-reader
```

![image-20231221192915397](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262243288.png)

D盘中是由于以下文件位置会有临时文件，通过电脑的清理垃圾功能会清除掉，或者在以下的D盘的temp文件中找到以下缓存文件手动清楚

```
D:\temp\snap-用户名
```

![image-20231221193221629](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262243624.png)



**3.问题：SNAP中重采样的速度慢**

在SANP中对某一幅影像所有波段，按照B2分辨率进行重采样之后的数据在16G左右，因此重采样之前加上一个BandSelect步骤，选择需要的波段进行重采样即可加快速度，尽量不要全部重采样。</description><guid isPermaLink="true">https://zbhgis.github.io/post/8.html</guid><pubDate>Mon, 23 Oct 2023 22:00:00 +0000</pubDate></item><item><title>Typora+picgo+gitee配置过程中存在问题</title><link>https://zbhgis.github.io/post/2.html</link><description># Typora+picgo+gitee配置过程中存在问题

1、刚开始是使用GitHub，但是不知道为什么一直上传不了图片，找了很多的解决方法都没能成功，考虑到可能是网络等方方面面的问题，于是放弃了GitHub，选择了Gitee；参考以下[博客](https://blog.csdn.net/weixin_45525272/article/details/125387761)；
2、在配置Gitee中的过程中，除了需要注册好Gitee，建立好仓库、需要保管好私人令牌外，还需要提前安装好node.js环境，直接去官网下载最新的长期支持版本即可；
3、在线安装Gitee的picgo插件过程中，插件一直显示安装中，即一直安装不上，这个时候就需要先前往picgo文件夹下的 node_moudules先将安装失败的插件文件夹 picgo-plugin-gitee-uploader 删除，然后再通过以下[博客](https://blog.csdn.net/Netceor/article/details/126704416)，通过命令行的方式进行安装；

![image-20231007161015722](https://cdn.jsdelivr.net/gh/zbhgis/BlogImg@main/blog/202506262245332.png)

4、如果中间安装失败，哪一步卡住，可以先尝试重启应用然后再重新执行操作，可以避免一些不必要的问题。</description><guid isPermaLink="true">https://zbhgis.github.io/post/2.html</guid><pubDate>Fri, 06 Oct 2023 22:00:00 +0000</pubDate></item><item><title>关于我</title><link>https://zbhgis.github.io/about.html</link><description>## 🌍 zbhgis （Focus on GIS, RS, Ecology）

&lt;p align='center'&gt;
  &lt;img src='https://img.shields.io/badge/-GIS-1573B3?style=flat&amp;logo=arcgis&amp;logoColor=white'/&gt;
  &lt;img src='https://img.shields.io/badge/-Remote%20Sensing-3BA138?style=flat&amp;logo=googleearth&amp;logoColor=white'/&gt;
  &lt;img src='https://img.shields.io/badge/-Ecological%20Modeling-8FBC8F?style=flat&amp;logo=leaflet&amp;logoColor=white'/&gt;
&lt;/p&gt;


### 🌐 Tools
- **Software**: ArcGIS/ArcGIS Pro, QGIS, ENVI, Google Earth Engine
- **Languages**: Python (NumPy, Pandas, Scikit-learn, Matplotlib, Seaborn, Folium, Plotly)

### 🔗 Connect with Me
&lt;p align='center'&gt;
&lt;a href='https://github.com/zbhgis' target='_blank'&gt;&lt;img src='https://img.shields.io/badge/GitHub-181717?style=for-the-badge&amp;logo=github&amp;logoColor=white' alt='GitHub'/&gt;&lt;/a&gt; &lt;a href='https://blog.csdn.net/zbhgis' target='_blank'&gt;&lt;img src='https://img.shields.io/badge/CSDN-FF0000?style=for-the-badge&amp;logo=c&amp;logoColor=white' alt='CSDN'/&gt;&lt;/a&gt; &lt;a href='https://zbhgis.com' target='_blank'&gt;&lt;img src='https://img.shields.io/badge/Website-4285F4?style=for-the-badge&amp;logo=googlechrome&amp;logoColor=white' alt='Website'/&gt;&lt;/a&gt; &lt;a href='mailto:your-email@example.com' target='_blank'&gt;&lt;img src='https://img.shields.io/badge/Email-D14836?style=for-the-badge&amp;logo=gmail&amp;logoColor=white' alt='Email'/&gt;&lt;/a&gt; &lt;a href='https://example.com/wechat' target='_blank'&gt;&lt;img src='https://img.shields.io/badge/WeChat-07C160?style=for-the-badge&amp;logo=wechat&amp;logoColor=white' alt='WeChat'/&gt;&lt;/a&gt; &lt;/p&gt;。</description><guid isPermaLink="true">https://zbhgis.github.io/about.html</guid><pubDate>Fri, 27 Jun 2025 04:29:07 +0000</pubDate></item><item><title>链接</title><link>https://zbhgis.github.io/link.html</link><description>链接。</description><guid isPermaLink="true">https://zbhgis.github.io/link.html</guid><pubDate>Fri, 27 Jun 2025 04:30:12 +0000</pubDate></item></channel></rss>